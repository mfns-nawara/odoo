# -*- coding: utf-8 -*-
# Part of Odoo. See LICENSE file for full copyright and licensing details.

from odoo import fields, models, api, SUPERUSER_ID


class UtmCampaign(models.Model):
    _inherit = ['utm.campaign']
    _description = 'UTM Campaign'

    click_count = fields.Integer(string="Number of clicks generated by the campaign", compute="_compute_clicks_count")

    def _compute_clicks_count(self):
        click_data = self.env['link.tracker.click'].read_group(
            [('campaign_id', 'in', self.ids)],
            ['campaign_id'], ['campaign_id'])

        mapped_data = {datum['campaign_id'][0]: datum['campaign_id_count'] for datum in click_data}

        for campaign in self:
            campaign.click_count = mapped_data.get(campaign.id, 0)

    # override
    def _get_modules_to_ignore(self):
        return super(UtmCampaign, self)._get_modules_to_ignore() + ['link.tracker']
    
    # override
    def _merge_utm_campaigns(self, campaign=False, name=False, user_id=False, stage_id=False, tag_ids=False):
        """
            After merge the campaigns, redirect the link.tracker that link to old campaigns to the new merged campaign.
        """
        merged_campaign, deactived_campaigns = super(UtmCampaign, self)._merge_utm_campaigns(campaign, name, user_id, stage_id, tag_ids)
        link_trackers = self.env['link.tracker'].search([('campaign_id', 'in', (merged_campaign | deactived_campaigns).ids)])
        link_trackers._check_duplicates()
        self._redirect_to_merged_campaign('link.tracker', 'campaign_id', merged_campaign, deactived_campaigns)
        return merged_campaign, deactived_campaigns
